<?xml version='1.0'?>
<robot name="rrbot" xmlns:xacro="http://www.ros.org/wiki/xacro">
<xacro:property name="cameraSize" value="0.05"/>
<xacro:property name="cameraMass" value="0.1"/>

  <xacro:macro name="default_inertial" params="z_value i_value mass">
    <inertial>
      <origin xyz="0 0 ${z_value}" rpy="0 0 0"/>
      <mass value="${mass}" />
      <inertia ixx="${i_value}" ixy="0.0" ixz="0.0"
               iyy="${i_value}" iyz="0.0"
               izz="${i_value}" />
      </inertial>
  </xacro:macro>



	<!-- Base Link -->




	<!-- Base Link -->
  <link name="base_link">
	<visual>
   	<material name="Red">
      <color rgba="1 0 0 1"/>
    </material> 		
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
          <box size="0.8 0.5 0.25"/>
      </geometry>
    </visual>

    <!--Base link collision mass and inertia -->

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
          <box size="0.8 0.5 0.25"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="10"/>
      <inertia ixx="0.26" ixy="0.0" ixz="0.0" iyy="0.58" iyz="0.0" izz="0.74"/>
     
    </inertial>   





	<!-- Caster -->

    <visual name="caster">
   	<material name="White">
      <color rgba="1 1 1 1"/>
    </material>     	
      <origin xyz="0.30 0 -0.120" rpy="0 0 0" />
      <geometry>
        <sphere radius="0.08" />
      </geometry>
      <surface>
        <friction>
          <ode>
            <mu>0</mu>
            <mu2>0</mu2>
            <slip1>1.0</slip1>
            <slip2>1.0</slip2>
          </ode>
        </friction>
      </surface>
    </visual>

    <!--Caster collision mass and inertia -->

    <collision>
      <origin xyz="0.30 0 -0.120" rpy="0 0 0" />
      <geometry>
        <sphere radius="0.1" />
      </geometry>
    </collision>
  <!--  <inertial>
      <mass value="0.5"/>
      <inertia ixx="0.0005" ixy="0.0" ixz="0.0" iyy="0.0005" iyz="0.0" izz="0.0005"/>
    </inertial>-->
   </link>


    <!-- Base -->
  <joint name="joint_base1" type="revolute">
    <parent link="base_link"/>
    <child link="base1"/>
    <origin xyz="0 0 0.03" rpy="0 0 0" /> 
  <dynamics damping="0.7"/>
  <limit effort="1000" velocity="0.5" lower="-3.14" upper="3.14" />
    <axis xyz="0 0 1" />
  </joint>

  <link name="base1">
    <visual>
    <material name="Black">
      <color rgba="0 0 0 1"/>
    </material>
    <origin xyz="0 0 0.30" rpy="0 0 0" />
      <geometry>

          <cylinder radius="0.2" length= "0.4" />
      </geometry>
    </visual>

  <!--Neck collision,mass and inertia-->  

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
          <cylinder radius="0.2" length= "0.4" />
      </geometry>
    </collision>
    <inertial>
    <mass value="0.5"/>
      <inertia ixx="0.011" ixy="0.0" ixz="0.0" iyy="0.011" iyz="0.0" izz="0.01"/>
    </inertial>

  </link>

  <!--joint type of Neck-->




    <!-- Mid -->
  <joint name="joint_base_mid" type="revolute">
    <parent link="base1"/>
    <child link="mid"/>
    <origin xyz="0 0 0.40" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
    <dynamics damping="0.7"/>
    <limit effort="100" velocity="0.5" lower="-3.14" upper="3.14" />
  </joint>

  <link name="mid">
    <visual>
    <material name="White">
      <color rgba="1 1 1 1"/>
    </material>
    <origin rpy="0 0 0 " xyz="0 0 0.40"/>
      <geometry>
          <cylinder radius="0.1" length= "0.8" />
      </geometry>
    </visual>

  <!--Neck collision,mass and inertia-->  

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0.26" />
      <geometry>
         <cylinder radius="0.1" length= "0.8" />
      </geometry>
    </collision>
    <inertial>
    <mass value="0.5"/>
      <inertia ixx="0.27" ixy="0.0" ixz="0.0" iyy="0.27" iyz="0.0" izz="0.002"/>
    </inertial>

  </link>

  <!--joint type of Neck-->

    <!-- Top -->
  <joint name="joint_mid_top" type="revolute">
    <parent link="mid"/>
    <child link="top"/>
    <origin xyz="0 0 0.8" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
    <dynamics damping="0.7"/>
    <limit effort="100" velocity="0.5" lower="-3.14" upper="3.14" />
  </joint>

  <link name="top">
    <visual>
    <material name="White">
      <color rgba="1 1 1 1"/>
    </material>
    <origin rpy="0 0 0 " xyz="0 0 0.2"/>
      <geometry>
          <cylinder radius="0.08" length= "0.6" />
      </geometry>
    </visual>

  <!--Neck collision,mass and inertia-->  

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0.2" />
      <geometry>
         <cylinder radius="0.08" length= "0.6" />
      </geometry>
    </collision>
    <inertial>
    <mass value="0.5"/>
      <inertia ixx="0.015" ixy="0.0" ixz="0.0" iyy="0.015" iyz="0.0" izz="0.0016"/>
    </inertial>

  </link>


   <!-- last -->
  <joint name="joint_top_last" type="revolute">
    <parent link="top"/>
    <child link="last"/>
    <origin xyz="0 0 0.5" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
    <dynamics damping="0.7"/>
    <limit effort="100" velocity="0.5" lower="-3.14" upper="3.14" />
  </joint>

  <link name="last">
    <visual>
    <material name="White">
      <color rgba="1 1 1 1"/>
    </material>
    <origin rpy="0 0 0 " xyz="0 0 0.2"/>
      <geometry>
          <cylinder radius="0.05" length= "0.5" />
      </geometry>
    </visual>

 

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0.2" />
      <geometry>
         <cylinder radius="0.05" length= "0.5" />
      </geometry>
    </collision>
    <inertial>
    <mass value="0.5"/>
      <inertia ixx="0.01" ixy="0.0" ixz="0.0" iyy="0.01" iyz="0.0" izz="0.0006"/>
    </inertial>

  </link> 





    
	<!-- Right Wheel -->

    <link name="right_wheel">
    <visual>
   	<material name="Black">
      <color rgba="0 0 0 1"/>
    </material>    	
      <origin xyz="0 0 0" rpy="1.570795 0 0" />
      <geometry>
          <cylinder length="0.1" radius="0.2" />
      </geometry>
    </visual>
	<!--Right wheel collision mass and inertia -->

    <collision>
      <origin xyz="0 0 0" rpy="1.570795 0 0" />
      <geometry>
          <cylinder length="0.1" radius="0.2" />
      </geometry>
    </collision>
    <inertial>
      <mass value="8"/>
      <inertia ixx="0.086" ixy="0.0" ixz="0.0" iyy="0.086" iyz="0.0" izz="0.16"/>
    </inertial>
  </link>
  <!--joint type of Right Wheel-->

  <joint name="joint_right_wheel" type="continuous">
    <parent link="base_link"/>
    <child link="right_wheel"/>
    <origin xyz="-0.2 -0.30 0" rpy="0 0 0" /> 
    <axis xyz="0 1 0" />
    <joint_properties damping="0.0" friction="0.0"/>
    <limit effort="100" velocity="100"/>
  </joint>




	<!-- Left Wheel -->

  <link name="left_wheel">
    <visual>
   	<material name="Black">
      <color rgba="0 0 0 1"/>
    </material>    	
      <origin xyz="0 0 0" rpy="1.570795 0 0" />
      <geometry>
          <cylinder length="0.1" radius="0.2" />
      </geometry>
    </visual>

	<!--Right wheel collision mass and inertia -->

    <collision>
      <origin xyz="0 0 0" rpy="1.570795 0 0" />
      <geometry>
          <cylinder length="0.1" radius="0.2" />
      </geometry>
    </collision>
    <inertial>
      <mass value="8"/>
      <inertia ixx="0.086" ixy="0.0" ixz="0.0" iyy="0.086" iyz="0.0" izz="0.16"/>
    </inertial>

	<!--joint type of Left Wheel-->  

  </link>
  <joint name="joint_left_wheel" type="continuous">
    <parent link="base_link"/>
    <child link="left_wheel"/>
    <origin xyz="-0.20 0.30 0" rpy="0 0 0" /> 
    <axis xyz="0 1 0" />
    <limit effort="100" velocity="100"/>
    <joint_properties damping="0.0" friction="0.0"/>
  </joint>


  <gazebo>
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <legacyMode>false</legacyMode>
      <alwaysOn>true</alwaysOn>
      <updateRate>20</updateRate>
      <leftJoint>joint_left_wheel</leftJoint>
      <rightJoint>joint_right_wheel</rightJoint>
      <wheelSeparation>0.4</wheelSeparation>
      <wheelDiameter>0.1</wheelDiameter>
      <torque>20</torque>
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <robotBaseFrame>base_link</robotBaseFrame>
    </plugin>
  </gazebo>




  <link name="camera">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${cameraSize} ${cameraSize} ${cameraSize}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${cameraSize} ${cameraSize} ${cameraSize}"/>
      </geometry>
      <material name="green"/>
    </visual>

    <inertial>
      <mass value="${cameraMass}" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <box_inertia m="${cameraMass}" x="${cameraSize}" y="${cameraSize}" z="${cameraSize}" />
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

  <joint name="camera_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz=".38 0 0.16" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="camera"/>
  </joint>









  <gazebo reference="camera">
    <material>Gazebo/Green</material>
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>rrbot/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>



<!-- Hokuyo -->
  <joint name="hokuyo_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz="0 0 .06" rpy="0 0 0"/>
    <parent link="camera"/>
    <child link="hokuyo"/>
  </joint>

  <link name="hokuyo">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
    <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://ros_robotics/meshes/hokuyo.dae"/>
      </geometry>
    </visual>

    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

  <!-- hokuyo -->
  <gazebo reference="hokuyo">
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type> -->
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
     <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/rrbot/laser/scan</topicName>
        <frameName>hokuyo</frameName>
      </plugin>
    </sensor>
  </gazebo> 






    <transmission name="transmission1">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint_base1">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor1">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>


 <transmission name="transmission2">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint_base_mid">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor2">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

 <transmission name="transmission3">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint_mid_top">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor3">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
 <transmission name="transmission4">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint_top_last">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor4">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>












<!--Gazebo References-->

  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/rrbot</robotNamespace>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo>

<gazebo reference="base_link">
  <material>Gazebo/Red</material>
</gazebo>
<gazebo reference="right_wheel">
  <material>Gazebo/Black</material>
</gazebo>
  <gazebo reference="left_wheel">
<material>Gazebo/Black</material>
</gazebo>

<gazebo reference="base1">
  <material>Gazebo/Black</material>
</gazebo>

  <gazebo reference="mid">
<material>Gazebo/White</material>
</gazebo>

 <gazebo reference="top">
<material>Gazebo/White</material>
</gazebo>

 <gazebo reference="last">
<material>Gazebo/White</material>
</gazebo>



</robot>
